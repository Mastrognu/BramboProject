module SocialResource2CitySensing;

-- @path CitySensing=/BramboProject2k15/model/CitySensing.ecore
-- @path SocialResource=/BramboProject2k15/model/SocialResource.ecore

create OUT: CitySensing from IN: SocialResource;

helper context SocialResource!Post def: resCity(): String =
	if not self.place.city.oclIsUndefined() then
		self.place.city
	else
		if not self.persons.oclIsTypeOf(Author).place.city.oclIsUndefined() then
			self.persons.oclIsTypeOf(Author).place.city
		endif
	endif;

helper context SocialResource!Post def: hasCoordinates: Boolean =
	self.currentCity.coordinates -> size() > 0
		  	
helper context CitySensing!District def: countPostPerDistrict(): int = 
	count(self.groupPostsPerDistrict()) 
	
helper context CitySensing!District def: groupPostsPerDistrict():
		OrderedSet(SocialResource!Post) = 
	let allPosts: OrderedSet(SocialMediaResource!SocialMediaResource) = 
		SocialMediaResource!SocialMediaResource.posts.select(p|p.hasCoordinates())
	in
		allPosts.select(p | self.coordBx < p.postCoordx < self.coordEx and self.coordBy <
				p.postCoordy < self.coordEy)
	
rule Posts2NumPerDistrict {
	from
		s: SocialResource!SocialMediaResource ()
	to
		t: CitySensing!NumPostDistr (
			name <- "Posts per district"
			metric <- t.data.countPostPerDistrict()
		)
}











